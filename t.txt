Here are the sample validation payloads for all three cases:

## **CASE 1: One GRN to One Invoice (1:1)**

```json
{
  "status": "success",
  "message": "Validated 1 invoice(s) successfully",
  "data": {
    "validation_results": [
      {
        "invoice_date": "2025-09-07",
        "status": "SUCCESS",
        "reasoning": "Invoice validated successfully against GRN. Vendor S00536 matches, total amount 74,950.54 SAR matches GRN total within tolerance, and all line items validated with quantities within available limits.",
        "payload": {
          "CardCode": "S00536",
          "DocEntry": 20170,
          "DocDate": "2025-09-07",
          "BPL_IDAssignedToInvoice": 3,
          "DocumentLines": [
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.11
            }
          ]
        }
      }
    ]
  }
}
```

## **CASE 2: One GRN to Multiple Invoices (1:many)**

```json
{
  "status": "success",
  "message": "Validated 2 invoice(s) successfully",
  "data": {
    "validation_results": [
      {
        "invoice_date": "2025-08-31",
        "status": "SUCCESS",
        "reasoning": "First invoice validated successfully. Vendor S00051 matches, amount 3,107.30 SAR is partial billing against GRN. Line item for galvanization validated with quantity 4.0 within available limits.",
        "payload": {
          "CardCode": "S00051",
          "DocEntry": 16079,
          "DocDate": "2025-08-31",
          "BPL_IDAssignedToInvoice": 3,
          "DocumentLines": [
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 1.93
            }
          ]
        }
      },
      {
        "invoice_date": "2025-08-31",
        "status": "SUCCESS",
        "reasoning": "Second invoice validated successfully. Same vendor S00051, amount 2,264.35 SAR covers remaining items. Combined with first invoice totals match GRN amount.",
        "payload": {
          "CardCode": "S00051",
          "DocEntry": 16079,
          "DocDate": "2025-08-31",
          "BPL_IDAssignedToInvoice": 3,
          "DocumentLines": [
            {
              "LineNum": 1,
              "RemainingOpenQuantity": 1.79
            }
          ]
        }
      }
    ]
  }
}
```

## **CASE 3: Multiple GRNs to One Invoice (many:1)**

```json
{
  "status": "success",
  "message": "Validated 1 invoice(s) successfully",
  "data": {
    "validation_results": [
      {
        "invoice_date": "2025-09-07",
        "status": "SUCCESS",
        "reasoning": "Invoice validated against 7 GRNs successfully. Vendor S00536 consistent across all GRNs. Total invoice amount 524,267.54 SAR matches aggregated GRN total. All line items mapped to appropriate GRNs with quantities within combined limits.",
        "payload": {
          "CardCode": "S00536",
          "DocEntry": 20170,
          "DocDate": "2025-09-07",
          "BPL_IDAssignedToInvoice": 3,
          "DocumentLines": [
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.11
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.11
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.07
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.03
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.09
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.06
            },
            {
              "LineNum": 0,
              "RemainingOpenQuantity": 29.15
            }
          ]
        }
      }
    ]
  }
}
```

**Key Differences:**

- **1:1**: Single invoice date, single payload with one GRN reference
- **1:many**: Multiple invoice dates, separate payloads for each invoice, all reference same DocEntry
- **many:1**: Single invoice date, single payload but DocumentLines reference multiple GRN line items, or multiple payloads if GRNs have different DocEntry values

Each payload is ready to POST to SAP's `/b1s/v2/PurchaseInvoices` endpoint.